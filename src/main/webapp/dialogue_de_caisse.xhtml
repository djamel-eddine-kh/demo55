<ui:composition xmlns="http://www.w3.org/1999/xhtml" 
      xmlns:h="jakarta.faces.html"
      xmlns:f="jakarta.faces.core"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:p="http://primefaces.org/ui">

    <p:dialog header="Money Ticket Calculator" widgetVar="moneyDialog" modal="true"
          width="600" resizable="false" id="moneyDialog"
          style="max-height: 80vh; overflow-y: auto;"
          onShow="addDialogCloseEvent();" closable="false">

        <h:form id="moneyForm">
            <p:panel header="Enter the number of tickets" style="margin-bottom: 10px;">
                <p:dataTable value="#{caisseDetailBean.ticketCounts.keySet().toArray()}" var="denomination"
                    styleClass="ui-datatable-striped ui-datatable-hoverable-rows"
                    style="width: 100%;">

                    <p:column headerText="Denomination" style="text-align:center; font-weight: bold;">
                        <h:outputText value="#{denomination} DZD" />
                    </p:column>

                    <p:column headerText="Quantity" style="text-align:center;">
                        <p:inputText value="#{caisseDetailBean.ticketCounts[denomination]}" min="0"
                            step="1" size="5" style="width: 120px; text-align:center;"
                            type="number"
                            onkeyup="PrimeFaces.ab({source:this, event:'keyup', update:'@form'});" 
                            onkeypress="handleEnterKey(event)"
                             >
                            <p:ajax event="change" listener="#{caisseDetailBean.updateTotal}"
                                   update="@form" />
                        </p:inputText>
                    </p:column>

                    <p:column headerText="Total" style="text-align:center; color:green; font-weight:bold;">
                        <h:outputText value="#{denomination * caisseDetailBean.ticketCounts[denomination]} DZD" />
                    </p:column>
                </p:dataTable>
            </p:panel>

            <p:separator/>

            <h:panelGrid columns="2" style="width:100%; text-align:center;">
                <h:outputText value="Total Amount: " style="font-size:18px; font-weight:bold;" />
                <h:outputText value="#{caisseDetailBean.totalAmount} DZD"
                    style="font-size:18px; color:#27ae60; font-weight:bold;" />
            </h:panelGrid>

            <div style="text-align: center; margin-top: 10px;">
                <p:commandButton value="Save" icon="pi pi-save"
                    actionListener="#{caisseDetailBean.save}"
                    styleClass="ui-button-success"
                    style="font-size: 16px; width: 450px; height: 50px;"
                    oncomplete="PF('moneyDialog').hide()" />
            </div>
        </h:form>
    </p:dialog>
<h:outputScript>
    function addDialogCloseEvent() {
        setTimeout(function () {
            let dialogOverlay = document.querySelector('.ui-widget-overlay');
            if (dialogOverlay) {
                dialogOverlay.addEventListener('click', function () {
                    PF('moneyDialog').hide();
                });
            }
        }, 100);
    }

    function enableTabNavigation() {
        setTimeout(function () {
            let inputs = document.querySelectorAll('#moneyForm input[type="number"]');

            inputs.forEach((input, index) => {
                input.addEventListener('keydown', function (event) {
                    // Prevent default Tab behavior to move between inputs
                    if (event.key === 'Tab') {
                        event.preventDefault(); // Prevent default tab behavior
                        let nextInput = inputs[index + (event.shiftKey ? -1 : 1)];
                        if (nextInput) {
                            nextInput.focus();
                        }
                    }

                    // Prevent default form submission and dialog close on Enter
                    if (event.key === 'Enter') {
                        event.preventDefault(); // Prevent form submission or dialog closing
                        
                        let nextInput = inputs[index + 1]; // Move to the next input
                        if (nextInput) {
                            nextInput.focus();
                        }
                    }
                });
            });
        }, 200); // Adding delay to ensure inputs are fully rendered
    }


    // Disable Enter key behavior on form submission and dialog close
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Enter') {
            // Prevent default behavior (form submission / dialog closing)
            e.preventDefault();
            
            // Find all input fields in the form
            const inputs = document.querySelectorAll('#moneyForm input[type="number"]');
            
            // Find the current input element that has focus
            let currentIndex = Array.from(inputs).indexOf(document.activeElement);
            
            // If it's the last input, stay focused on it
            if (currentIndex === inputs.length - 1) return;
            
            // Move focus to the next input field
            let nextInput = inputs[currentIndex + 1];
            if (nextInput) {
                nextInput.focus();
            }
        }
    });
</h:outputScript>





</ui:composition>
